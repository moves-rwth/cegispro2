2022-09-30 11:35:20,744 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:35:20,744 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:35:21,260 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:35:21,260 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:35:21,814 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:35:21,814 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:35:22,372 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:35:22,373 - cegispro2 - INFO - 
 with postexpectation: 
 n
2022-09-30 11:35:22,846 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:35:22,846 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:35:23,375 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:35:23,375 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 11:35:23,837 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:35:23,837 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 11:35:24,294 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:35:24,294 - cegispro2 - INFO - 
 with postexpectation: 
 t
2022-09-30 11:35:24,874 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:35:24,875 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 11:35:25,393 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:35:25,393 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 11:35:25,910 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:35:25,910 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:35:26,420 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:35:26,421 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:35:26,856 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:35:26,856 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:35:27,296 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:35:27,296 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:35:27,817 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:35:27,818 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:35:28,293 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:35:28,293 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:35:28,789 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:35:28,789 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:35:29,275 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:35:29,276 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:35:29,756 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:35:29,756 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:35:30,993 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:35:30,993 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:35:32,180 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:35:32,180 - cegispro2 - INFO - 
 with postexpectation: 
 [x=2] + [not (x=2)]*0
2022-09-30 11:35:32,621 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:35:32,621 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:35:33,119 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:35:33,119 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:35:33,556 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:35:33,556 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:35:34,053 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:35:34,053 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:35:39,948 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:35:39,948 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:35:40,406 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:35:40,406 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:35:40,901 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:35:40,901 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:35:41,341 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:35:41,341 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:35:41,798 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:35:41,798 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:35:42,255 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:35:42,255 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:35:42,705 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:35:42,705 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:35:43,147 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:35:43,147 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:35:43,707 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:35:43,707 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:35:44,201 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:35:44,201 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:35:44,686 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:35:44,686 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:00,479 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:43:00,479 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:43:00,942 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:43:00,943 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:43:01,439 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:43:01,439 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:43:01,884 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:43:01,884 - cegispro2 - INFO - 
 with postexpectation: 
 n
2022-09-30 11:43:02,369 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:43:02,370 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:43:02,874 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:43:02,874 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 11:43:03,363 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:43:03,363 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 11:43:03,867 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:43:03,867 - cegispro2 - INFO - 
 with postexpectation: 
 t
2022-09-30 11:43:04,385 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:43:04,385 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 11:43:04,895 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:43:04,895 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 11:43:05,437 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:43:05,437 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:43:05,937 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:43:05,937 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:43:06,419 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:43:06,420 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:43:06,858 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:43:06,858 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:43:07,366 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:43:07,366 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:43:07,853 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:43:07,854 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:43:08,335 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:43:08,335 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:43:08,863 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:43:08,863 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:43:09,417 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:43:09,417 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:43:11,244 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:43:11,245 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:43:12,589 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:43:12,589 - cegispro2 - INFO - 
 with postexpectation: 
 [x=2] + [not (x=2)]*0
2022-09-30 11:43:13,048 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:43:13,048 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:43:13,656 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:43:13,657 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:43:14,359 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:43:14,359 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:43:14,952 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:43:14,953 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:43:21,761 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:43:21,761 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:22,241 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:43:22,241 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:22,756 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:43:22,756 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:23,235 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:43:23,235 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:23,725 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:43:23,725 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:24,222 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:43:24,222 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:24,681 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:43:24,682 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:25,161 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:43:25,161 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:25,752 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:43:25,753 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:26,254 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:43:26,255 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:26,772 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:43:26,772 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:46,944 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:43:46,944 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:47,637 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:43:47,637 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:48,415 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:43:48,415 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:49,116 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:43:49,117 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:49,773 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:43:49,774 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:50,432 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:43:50,433 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:51,140 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:43:51,140 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:52,432 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:43:52,432 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:54,666 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:43:54,666 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:56,536 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:43:56,536 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:57,139 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:43:57,140 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:57,749 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:43:57,749 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:58,350 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:43:58,350 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:43:58,910 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:43:58,910 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:44:07,967 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:44:07,968 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:08,623 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:44:08,623 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:09,257 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:44:09,257 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:09,858 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:44:09,859 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:10,482 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:44:10,482 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:11,068 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:44:11,068 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:11,646 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:44:11,647 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:12,250 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:44:12,250 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:13,032 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:44:13,033 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:13,658 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:44:13,659 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:14,282 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:44:14,282 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:34,377 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:44:34,378 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:35,092 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:44:35,092 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:35,911 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:44:35,911 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:36,654 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:44:36,654 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:37,386 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:44:37,386 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:38,198 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:44:38,198 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:39,003 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:44:39,004 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:39,806 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:44:39,807 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:42,080 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:44:42,080 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:44,441 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:44:44,441 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:45,127 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:44:45,127 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:45,829 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:44:45,829 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:46,616 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:44:46,617 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:44:47,312 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:44:47,312 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:45:07,385 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:45:07,387 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:08,278 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:45:08,278 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:09,280 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:45:09,280 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:10,157 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:45:10,157 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:11,100 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:45:11,100 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:12,000 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:45:12,000 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:12,854 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:45:12,854 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:13,702 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:45:13,703 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:14,868 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:45:14,868 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:15,810 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:45:15,810 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:16,774 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:45:16,774 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:36,881 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:45:36,881 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:37,918 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:45:37,918 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:38,949 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:45:38,950 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:40,011 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:45:40,011 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:41,005 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:45:41,005 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:42,083 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:45:42,084 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:43,103 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:45:43,103 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:44,251 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:45:44,252 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:47,948 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:45:47,948 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:51,595 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:45:51,596 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:52,658 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:45:52,658 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:53,626 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:45:53,626 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:54,710 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:45:54,711 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:55,731 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:45:55,731 - cegispro2 - INFO - 
 with postexpectation: 
 n
2022-09-30 11:45:57,681 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:45:57,681 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:45:58,943 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:45:58,943 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:00,049 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:46:00,050 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:01,208 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:46:01,208 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:02,207 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:46:02,207 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:03,249 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:46:03,249 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:04,199 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:46:04,199 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:05,247 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:46:05,248 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:06,606 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:46:06,606 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:07,707 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:46:07,708 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:08,796 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:46:08,796 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:28,937 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:46:28,937 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:30,065 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:46:30,065 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:31,273 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:46:31,273 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:32,397 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:46:32,398 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:33,536 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:46:33,536 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:34,675 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:46:34,675 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:35,879 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:46:35,879 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:37,048 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:46:37,048 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:40,967 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:46:40,967 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:45,257 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:46:45,257 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:46,533 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:46:46,533 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:47,964 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:46:47,964 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:49,156 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:46:49,157 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:46:50,394 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:46:50,394 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 11:47:10,395 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:47:10,405 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:11,760 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:47:11,761 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:13,211 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:47:13,211 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:14,561 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:47:14,562 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:15,916 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:47:15,917 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:17,246 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:47:17,246 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:18,879 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:47:18,879 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:21,155 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:47:21,155 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:23,365 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:47:23,365 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:24,762 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:47:24,763 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:26,152 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:47:26,153 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:46,296 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:47:46,296 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:47,720 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:47:47,720 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:49,144 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:47:49,144 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:50,930 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:47:50,930 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:52,537 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:47:52,538 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:54,054 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:47:54,054 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:55,643 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:47:55,643 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:47:57,124 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:47:57,124 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:02,011 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:48:02,012 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:06,977 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:48:06,978 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:09,331 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:48:09,331 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:11,183 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:48:11,183 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:13,087 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:48:13,090 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:15,091 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:48:15,092 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 11:48:17,561 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:48:17,561 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:19,220 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:48:19,220 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:20,923 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:48:20,923 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:22,457 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:48:22,457 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:24,027 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:48:24,028 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:25,581 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:48:25,581 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:27,166 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:48:27,167 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:28,673 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:48:28,674 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:30,707 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:48:30,707 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:32,380 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:48:32,380 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:34,077 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:48:34,078 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:54,114 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:48:54,114 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:55,832 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:48:55,832 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:57,567 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:48:57,567 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:48:59,236 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:48:59,237 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:00,912 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:49:00,912 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:02,746 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:49:02,746 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:04,419 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:49:04,419 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:06,154 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:49:06,155 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:11,484 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:49:11,485 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:16,836 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:49:16,837 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:18,451 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:49:18,451 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:20,206 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:49:20,206 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:21,960 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:49:21,960 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:23,726 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:49:23,726 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 11:49:27,784 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:49:27,784 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:29,522 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:49:29,526 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:31,454 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:49:31,454 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:33,189 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:49:33,189 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:34,951 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:49:34,951 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:36,664 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:49:36,664 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:38,551 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:49:38,551 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:40,313 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:49:40,313 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:42,492 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:49:42,493 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:44,313 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:49:44,315 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:49:46,245 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:49:46,246 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:06,382 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:50:06,383 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:08,272 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:50:08,272 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:10,119 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:50:10,119 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:11,944 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:50:11,944 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:13,818 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:50:13,818 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:15,744 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:50:15,764 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:17,575 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:50:17,575 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:19,438 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:50:19,438 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:25,306 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:50:25,307 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:31,293 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:50:31,293 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:33,129 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:50:33,129 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:34,998 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:50:34,999 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:36,872 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:50:36,872 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:50:38,710 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:50:38,711 - cegispro2 - INFO - 
 with postexpectation: 
 t
2022-09-30 11:50:58,773 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:50:58,773 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:01,093 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:51:01,094 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:03,385 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:51:03,386 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:05,462 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:51:05,462 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:07,650 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:51:07,650 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:09,753 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:51:09,754 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:11,735 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:51:11,735 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:13,760 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:51:13,761 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:16,598 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:51:16,598 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:18,688 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:51:18,688 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:20,732 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:51:20,733 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:40,747 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:51:40,750 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:42,762 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:51:42,762 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:44,798 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:51:44,799 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:46,915 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:51:46,916 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:48,889 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:51:48,889 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:51,012 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:51:51,013 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:53,111 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:51:53,111 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:51:55,128 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:51:55,129 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:01,565 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:52:01,566 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:08,010 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:52:08,011 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:10,010 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:52:10,011 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:12,150 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:52:12,150 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:14,188 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:52:14,215 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:16,352 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:52:16,353 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 11:52:36,366 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:52:36,366 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:38,777 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:52:38,777 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:41,189 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:52:41,190 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:43,350 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:52:43,351 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:45,772 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:52:45,772 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:48,116 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:52:48,116 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:50,329 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:52:50,330 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:52,469 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:52:52,470 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:55,514 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:52:55,515 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:52:57,939 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:52:57,939 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:00,243 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:53:00,243 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:20,425 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:53:20,425 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:22,843 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:53:22,843 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:25,207 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:53:25,208 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:27,626 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:53:27,626 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:30,074 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:53:30,097 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:32,569 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:53:32,569 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:34,932 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:53:34,932 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:37,342 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:53:37,342 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:44,978 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:53:44,979 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:52,569 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:53:52,578 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:54,683 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:53:54,683 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:56,971 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:53:56,971 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:53:59,265 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:53:59,266 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:54:01,533 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:54:01,533 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 11:54:21,472 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:54:21,472 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:54:24,094 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:54:24,124 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:54:26,743 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:54:26,743 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:54:29,164 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:54:29,164 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:54:31,724 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:54:31,725 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:54:34,146 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:54:34,147 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:54:36,488 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:54:36,488 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:54:38,859 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:54:38,860 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:54:42,134 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:54:42,134 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:54:44,624 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:54:44,624 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:54:47,275 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:54:47,275 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:07,305 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:55:07,308 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:09,839 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:55:09,840 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:12,427 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:55:12,427 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:14,977 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:55:14,977 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:17,672 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:55:17,672 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:20,367 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:55:20,367 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:22,929 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:55:22,930 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:25,593 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:55:25,594 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:33,598 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:55:33,598 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:41,607 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:55:41,607 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:43,954 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:55:43,954 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:46,382 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:55:46,383 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:48,917 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:55:48,917 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:51,211 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:55:51,211 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:55:56,847 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:55:56,847 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:55:59,453 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:55:59,453 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:01,994 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:56:01,994 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:04,468 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:56:04,469 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:06,986 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 11:56:06,986 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:09,528 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:56:09,528 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:12,016 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 11:56:12,016 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:14,469 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 11:56:14,469 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:18,008 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:56:18,009 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:20,683 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 11:56:20,683 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:23,298 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 11:56:23,298 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:43,320 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:56:43,321 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:45,772 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:56:45,772 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:48,420 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:56:48,420 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:50,975 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 11:56:50,975 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:53,550 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 11:56:53,551 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:56,198 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:56:56,198 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:56:58,762 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 11:56:58,762 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:57:01,281 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:57:01,281 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:57:09,235 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 11:57:09,235 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:57:17,260 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 11:57:17,260 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:57:19,773 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:57:19,774 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:57:22,424 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 11:57:22,425 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:57:25,044 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 11:57:25,045 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:57:27,510 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 11:57:27,510 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 11:57:31,444 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:57:31,445 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:57:34,712 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 11:57:34,712 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:57:37,996 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 11:57:37,997 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 11:57:41,300 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 11:57:41,300 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:01:27,598 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:01:27,600 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:01:30,360 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:01:30,361 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:01:33,693 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:01:33,693 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:01:36,376 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 12:01:36,376 - cegispro2 - INFO - 
 with postexpectation: 
 n
2022-09-30 12:01:39,085 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 12:01:39,086 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:01:41,716 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:01:41,716 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:01:44,247 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:01:44,247 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:01:46,951 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 12:01:46,951 - cegispro2 - INFO - 
 with postexpectation: 
 t
2022-09-30 12:01:50,106 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:01:50,107 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:01:52,887 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:01:52,887 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:01:56,060 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 12:01:56,061 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:01:58,899 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:01:58,899 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:02:01,623 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:02:01,624 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:02:04,342 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:02:04,342 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:02:07,185 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 12:02:07,185 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:02:09,772 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 12:02:09,772 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:02:12,387 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:02:12,387 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:02:14,971 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:02:14,971 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:02:17,961 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:02:17,961 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:02:26,353 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:02:26,354 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:02:34,491 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 12:02:34,492 - cegispro2 - INFO - 
 with postexpectation: 
 [x=2] + [not (x=2)]*0
2022-09-30 12:02:37,071 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:02:37,071 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:02:39,996 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:02:39,996 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:02:42,826 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 12:02:42,827 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:02:45,616 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:02:45,616 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:02:55,741 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:02:55,741 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:02:58,957 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:02:58,957 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:02,365 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:03:02,367 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:05,185 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 12:03:05,185 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:08,264 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 12:03:08,264 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:11,195 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:03:11,195 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:14,059 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:03:14,059 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:16,966 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 12:03:16,966 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:21,008 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:03:21,008 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:24,180 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:03:24,180 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:27,435 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 12:03:27,435 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:37,259 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:03:37,260 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:39,974 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:03:39,974 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:43,004 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:03:43,005 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:45,738 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 12:03:45,739 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:48,526 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 12:03:48,527 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:51,483 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:03:51,484 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:54,169 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:03:54,169 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:03:57,419 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:03:57,419 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:04:07,739 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:04:07,740 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:04:17,251 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 12:04:17,252 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:04:19,987 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:04:19,987 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:04:22,840 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:04:22,840 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:04:25,803 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 12:04:25,803 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:04:28,500 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:04:28,500 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:04:38,879 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:04:38,880 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:04:42,381 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:04:42,382 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:04:45,602 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:04:45,602 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:04:48,461 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 12:04:48,462 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:04:51,918 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 12:04:51,919 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:04:55,621 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:04:55,621 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:04:58,994 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:04:58,995 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:01,993 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 12:05:01,993 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:06,160 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:05:06,160 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:09,429 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:05:09,429 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:13,156 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 12:05:13,156 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:23,114 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:05:23,114 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:26,225 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:05:26,225 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:29,341 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:05:29,341 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:32,311 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 12:05:32,311 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:35,335 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 12:05:35,335 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:38,720 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:05:38,720 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:41,686 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:05:41,686 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:45,131 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:05:45,131 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:05:56,570 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:05:56,570 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:04,856 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 12:06:04,856 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:07,827 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:06:07,827 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:10,844 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:06:10,844 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:14,315 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 12:06:14,315 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:17,433 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:06:17,433 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:06:27,661 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:06:27,661 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:32,331 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:06:32,331 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:36,419 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:06:36,419 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:40,302 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 12:06:40,302 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:44,310 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 12:06:44,310 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:48,561 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:06:48,561 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:52,228 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:06:52,229 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:55,266 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 12:06:55,266 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:06:59,691 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:06:59,692 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:07:03,003 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:07:03,003 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:07:07,050 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 12:07:07,051 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:07:17,962 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:07:17,963 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:07:21,985 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:07:21,986 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:07:25,360 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:07:25,360 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:07:28,641 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 12:07:28,641 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:07:31,896 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 12:07:31,896 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:07:35,753 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:07:35,753 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:07:39,186 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:07:39,186 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:07:42,629 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:07:42,629 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:07:52,783 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:07:52,784 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:02,565 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 12:08:02,565 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:06,277 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:08:06,277 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:10,020 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:08:10,020 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:13,844 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 12:08:13,844 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:17,592 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 12:08:17,593 - cegispro2 - INFO - 
 with postexpectation: 
 n
2022-09-30 12:08:23,119 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:08:23,119 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:26,643 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:08:26,643 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:30,208 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:08:30,209 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:33,501 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 12:08:33,501 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:36,868 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 12:08:36,869 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:40,299 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:08:40,299 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:44,101 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:08:44,101 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:47,654 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 12:08:47,655 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:52,131 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:08:52,132 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:55,888 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:08:55,888 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:08:59,746 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 12:08:59,746 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:09:10,191 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:09:10,191 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:09:13,645 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:09:13,646 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:09:18,181 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:09:18,182 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:09:22,439 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 12:09:22,440 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:10:01,624 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:10:01,625 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:10:05,584 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:10:05,585 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:10:10,243 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:10:10,243 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:10:13,660 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 12:10:13,660 - cegispro2 - INFO - 
 with postexpectation: 
 n
2022-09-30 12:10:17,144 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 12:10:17,144 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:10:20,846 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:10:20,846 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:10:24,934 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:10:24,935 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:10:28,610 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 12:10:28,611 - cegispro2 - INFO - 
 with postexpectation: 
 t
2022-09-30 12:10:32,916 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:10:32,917 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:10:36,812 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:10:36,812 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:10:41,371 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 12:10:41,372 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:10:45,146 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:10:45,146 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:10:48,910 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:10:48,910 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:10:52,378 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:10:52,378 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:10:56,217 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 12:10:56,217 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:10:59,669 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 12:10:59,670 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:11:03,265 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:11:03,265 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:11:06,949 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:11:06,949 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:11:12,545 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:11:12,545 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:11:21,331 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:11:21,331 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:11:31,200 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 12:11:31,201 - cegispro2 - INFO - 
 with postexpectation: 
 [x=2] + [not (x=2)]*0
2022-09-30 12:11:34,579 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:11:34,579 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:11:38,381 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:11:38,381 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:11:41,839 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 12:11:41,840 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:11:45,559 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:11:45,559 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:11:55,700 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:11:55,700 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:12:05,895 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:12:05,895 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:12:15,925 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 12:12:15,925 - cegispro2 - INFO - 
 with postexpectation: 
 n
2022-09-30 12:12:21,933 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 12:12:21,933 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:12:31,905 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:12:31,906 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:12:37,851 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:12:37,852 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:12:47,362 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 12:12:47,363 - cegispro2 - INFO - 
 with postexpectation: 
 t
2022-09-30 12:12:57,261 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:12:57,262 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:13:07,298 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:13:07,298 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:13:17,497 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 12:13:17,497 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:13:27,574 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:13:27,574 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:13:33,239 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:13:33,239 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:13:43,113 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:13:43,114 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:13:49,540 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 12:13:49,541 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:13:55,858 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 12:13:55,859 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:14:02,576 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:14:02,576 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:14:12,595 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:14:12,596 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:14:22,473 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:14:22,473 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:14:32,641 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:14:32,641 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:14:42,776 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 12:14:42,776 - cegispro2 - INFO - 
 with postexpectation: 
 [x=2] + [not (x=2)]*0
2022-09-30 12:14:51,731 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:14:51,731 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:14:59,302 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:14:59,303 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:15:09,547 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 12:15:09,547 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:15:19,299 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:15:19,299 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:15:25,078 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:15:25,079 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:15:30,717 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:15:30,717 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:15:35,995 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 12:15:35,996 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:15:41,488 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 12:15:41,488 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:15:46,812 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:15:46,812 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:15:51,940 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:15:51,940 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:15:57,238 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 12:15:57,238 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:16:04,254 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:16:04,254 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:16:10,136 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:16:10,136 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:16:15,947 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 12:16:15,947 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:16:25,841 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:16:25,842 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:16:30,839 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:16:30,839 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:16:35,792 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:16:35,793 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:16:40,825 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 12:16:40,825 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:16:45,915 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 12:16:45,915 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:16:51,218 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:16:51,218 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:16:56,278 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:16:56,279 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:17:01,449 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:17:01,449 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:17:11,281 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:17:11,281 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:17:21,528 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 12:17:21,528 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:17:26,741 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:17:26,742 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:17:31,897 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:17:31,897 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:17:37,109 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 12:17:37,109 - cegispro2 - INFO - 
 with postexpectation: 
 0
2022-09-30 12:43:21,550 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:43:21,551 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:43:26,703 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:43:26,703 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:43:32,126 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:43:32,126 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:43:37,056 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 12:43:37,056 - cegispro2 - INFO - 
 with postexpectation: 
 n
2022-09-30 12:43:42,082 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 12:43:42,083 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:43:47,139 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:43:47,140 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:43:51,824 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:43:51,824 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:43:57,111 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 12:43:57,111 - cegispro2 - INFO - 
 with postexpectation: 
 t
2022-09-30 12:44:04,265 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:44:04,265 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:44:10,424 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:44:10,424 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:44:16,640 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 12:44:16,641 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:44:22,176 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:44:22,177 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:44:26,952 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:44:26,952 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:44:31,793 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:44:31,793 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:44:37,184 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 12:44:37,184 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:44:41,971 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 12:44:41,971 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:44:46,562 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:44:46,563 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:44:51,630 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:44:51,630 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:44:57,154 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:44:57,155 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:45:07,229 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:45:07,230 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:45:17,098 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 12:45:17,098 - cegispro2 - INFO - 
 with postexpectation: 
 [x=2] + [not (x=2)]*0
2022-09-30 12:45:21,955 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:45:21,955 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:45:27,390 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:45:27,390 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:45:32,011 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 12:45:32,011 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:45:37,184 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:45:37,184 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:45:47,097 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:45:47,097 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:45:57,069 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:45:57,069 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:47:50,515 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:47:50,515 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:47:55,759 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:47:55,759 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:48:01,171 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:48:01,178 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:48:05,947 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin105.pgcl --post "n" --prop "n"

nat n;
nat x;
nat M;

while(n < M){
    {x:=x+1}[0.5]{skip};
    n:=n+1
}

2022-09-30 12:48:05,948 - cegispro2 - INFO - 
 with postexpectation: 
 n
2022-09-30 12:48:11,062 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin205.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+n}[0.5]{x:=x+y};
    n:=n-1
}

2022-09-30 12:48:11,062 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:48:16,023 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:48:16,023 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:48:20,803 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Detm.pgcl --post "count" --prop "[x<=10]*(count + 1) + [10 < x]*count"
# benchmarks/EXIST/Detm.pgcl --post "count" --prop "count"

nat count;
nat x;

while(x <= 10){
    x:=x+1;
    count := count + 1
}

2022-09-30 12:48:20,803 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:48:25,990 - cegispro2 - INFO - Parsing program: 
 # not a sound lower bound?: we find a super invariant for this:
# benchmarks/EXIST/Duel0406.pgcl --post "t" --prop "[c=1 & t<=1 & c<= 1]*(1 - (15/19)*c)"
# benchmark seems unsound... not a lower, but an upper bound! (in paper)

nat c;
nat t;
nat n;

while(c=1 & t <=1 & c<=1){
    n := n + 1;
    if(t=1){
        {c:=0}[0.4]{t:=0}
    }else{
        {c:=0}[0.6]{t:=1}
    }
}
2022-09-30 12:48:25,990 - cegispro2 - INFO - 
 with postexpectation: 
 t
2022-09-30 12:48:31,870 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:48:31,871 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:48:37,450 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "[c1 + c2 = 0]*(1+count) + [not (c1 + c2 = 0)]*count"
# benchmarks/EXIST/Fair0505.pgcl --post "count" --prop "count"


nat c1;
nat c2;
nat count;

while(c1 + c2 =0 & c1 <= 0 & c2 <= 0){
    {c1:=1; count:=count+1}[0.5]{skip};
    {c2:=1; count:=count+1}[0.5]{skip};
}

2022-09-30 12:48:37,450 - cegispro2 - INFO - 
 with postexpectation: 
 count
2022-09-30 12:48:43,309 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Gambler.pgcl --post "z" --prop "z"


nat x;
nat y;
nat z;

while(0 < x & x < y){
    {x:=x+1}[0.5]{x:=x-1;z:=z+1};
}

2022-09-30 12:48:43,310 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:48:48,644 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:48:48,644 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:48:53,409 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:48:53,409 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:48:58,274 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*(z+0.5) + [not (flip=0)]*z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "z"
# benchmarks/EXIST/Geo005.pgcl --post "z" --prop "[flip=0]*0.5"

nat flip;
nat z;

while(flip = 0){
    {flip:=1}[0.5]{z:=z+1};
}

2022-09-30 12:48:58,274 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:49:03,705 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo105.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=2*x; z:=z+1};
}

2022-09-30 12:49:03,705 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:49:08,693 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Geo205.pgcl --post "z" --prop "z"

nat flip;
nat z;
nat x;

while(flip = 0){
    {flip:=1}[0.5]{x:=x+1; z:=z+1};
}

2022-09-30 12:49:08,694 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:49:13,424 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:49:13,424 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:49:18,437 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "x"
#benchmarks/EXIST/GeoAr05.pgcl --post "x" --prop "[not (z=0)]*(x + y) + [z=0]*x"


nat x;
nat y;
nat z;

while(not (z=0)){
    {y:=y+1;z:=0}[0.5]{x:=x+y}
}
2022-09-30 12:49:18,438 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:49:24,095 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:49:24,095 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:49:40,096 - cegispro2 - INFO - Parsing program: 
 #        "post": "z",
#        "pre": ["z + [n>0]*2*n", "z + [n>0]*2"]

#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(z+2) + [not (0<n)]*z"
#benchmarks/EXIST/LinExp.pgcl --post "z" --prop "[0<n]*(2*n) + [not (0<n)]*z"

nat z;
nat n;
nat x1;
nat x2;
nat x3;
nat c1;
nat c2;
nat c3;


while(0 < n){
    {x1:=1}[0.5]{x1:=0};
    {x2:=1}[0.5]{x2:=0};
    {x3:=1}[0.5]{x3:=0};
    if(1 <= x1 + x2 + x3){c1:=1}else{c1:=0};
    if(1 <= x1+(1-x2)+x3){c2:=1}else{c2:=0};
    if(1 <= (1-x1)+x2+x3){c3:=1}else{c3:=0};
    n:=n-1
    z:=z+(c1+c2+c3)
}
2022-09-30 12:49:40,097 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:49:55,502 - cegispro2 - INFO - Parsing program: 
 #benchmarks/EXIST/PrinSys05.pgcl --post "[x=2] + [not (x=2)]*0" --prop "[x=2]"
nat x;

while(x=0){
{x:=0}[0.5]{{x:=1}[0.5]{x:=2}}
}
2022-09-30 12:49:55,502 - cegispro2 - INFO - 
 with postexpectation: 
 [x=2] + [not (x=2)]*0
2022-09-30 12:50:00,261 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:50:00,261 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:50:05,592 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "[0<x]*(x+z)+[not (0<x)]*z"
# benchmarks/EXIST/RevBin05.pgcl --post "z" --prop "z"
nat x;
nat z;

while(0 < x){
    {x:=x-1}[0.5]{skip};
    z := z + 1
}

2022-09-30 12:50:05,592 - cegispro2 - INFO - 
 with postexpectation: 
 z
2022-09-30 12:50:10,392 - cegispro2 - INFO - Parsing program: 
 
# benchmarks/EXIST/Sum005.pgcl --post "x" --prop "[0<n]*(x+0.5*n)+[not (0<n)]*x"

nat n;
nat x;

while(0 < n){
    {x:=x+n}[0.5]{skip};
    n := n - 1;
}

2022-09-30 12:50:10,397 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:50:15,516 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:50:15,516 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:51:38,731 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[not (x=y)]*x+[x=y]*0"
# benchmarks/EXIST/BiasDir05.pgcl --post "x" --prop "[x=y]*0.5+[not (x=y)]*0"

nat x [0,1];
nat y [0,1];

while(x=y & x<=1 & y<=1){
    {x:=1}[0.5]{x:=0};
    {y:=1}[0.5]{y:=0};
}

2022-09-30 12:51:38,731 - cegispro2 - INFO - 
 with postexpectation: 
 x
2022-09-30 12:53:04,504 - cegispro2 - INFO - Parsing program: 
 # benchmarks/EXIST/Bin005.pgcl --post "x" --prop "x"

nat n;
nat x;
nat y;

while(0 < n){
    {x:=x+y}[0.5]{skip};
    n:=n-1
}

2022-09-30 12:53:04,504 - cegispro2 - INFO - 
 with postexpectation: 
 x
